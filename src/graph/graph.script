### Empty graph

## Directed

/create DIRECTED
/vertexcount 0
/isdirected YES

/isdirected NO
/catch return

/removevertex X
/catch "does not contain vertex"

/ivertices next X
/catch empty

/ivertices previous X
/catch empty

/degree X out 0
/catch "does not contain vertex"

/degree X in 0
/catch "does not contain vertex"

/degree X both 0
/catch "does not contain vertex"

/ineighbours V next in N E
/catch "does not contain vertex"

/ineighbours V next out N E
/catch "does not contain vertex"

/ineighbours V next both N E
/catch "does not contain vertex"

/ineighbours V previous in N E
/catch "does not contain vertex"

/ineighbours V previous out N E
/catch "does not contain vertex"

/ineighbours V previous both N E
/catch "does not contain vertex"

/containsvertex V NO
/containsvertex V YES
/catch return

/containsedge U V NO
/catch "does not contain vertex"

/addedge U V E
/catch "does not contain vertex"

/getedge U V E
/catch "does not contain vertex"

/removeedge U V
/catch "does not contain vertex"

## Undirected

/create UNDIRECTED
/vertexcount 0
/isdirected NO

/isdirected YES
/catch return

/removevertex X
/catch "does not contain vertex"

/ivertices next X
/catch empty

/ivertices previous X
/catch empty

/degree X out 0
/catch "does not contain vertex"

/degree X in 0
/catch "does not contain vertex"

/degree X both 0
/catch "does not contain vertex"

/ineighbours V next in N E
/catch "does not contain vertex"

/ineighbours V next out N E
/catch "does not contain vertex"

/ineighbours V next both N E
/catch "does not contain vertex"

/ineighbours V previous in N E
/catch "does not contain vertex"

/ineighbours V previous out N E
/catch "does not contain vertex"

/ineighbours V previous both N E
/catch "does not contain vertex"

/containsvertex V NO
/containsvertex V YES
/catch return

/containsedge U V NO
/catch "does not contain vertex"

/addedge U V E
/catch "does not contain vertex"

/getedge U V E
/catch "does not contain vertex"

/removeedge U V
/catch "does not contain vertex"

### One vertex

## Directed

/create DIRECTED
/addvertex V

# Checking if vertex was added
/vertexcount 1
/containsvertex V YES
/ivertices next V
/ivertices previous V

# Checking vertex degrees
/degree V in 0
/degree V out 0
/degree V both 0

# Checking vertex neighbours
/ineighbours V next in N E
/catch "does not contain edge"
/ineighbours V next out N E
/catch "does not contain edge"
/ineighbours V next both N E
/catch "does not contain edge"
/ineighbours V previous in N E
/catch "does not contain edge"
/ineighbours V previous out N E
/catch "does not contain edge"
/ineighbours V previous both N E
/catch "does not contain edge"

# Try removing edge VV
/removeedge V V
/catch "does not contain edge"

# Try adding edge VX
/addedge V X E
/catch "does not contain vertex"
/addedge X V E
/catch "does not contain vertex"

# Try getting edge VV
/getedge V V E
/catch "does not contain edge"

# Checking for edge VV
/containsedge V V NO

# Adding edge VV
/addedge V V E

# Checking if edge was added
/containsedge V V YES
/getedge V V E

# Checking neighbourhood
/ineighbours V next in V E
/ineighbours V next out V E
/ineighbours V next both V E
/ineighbours V next both V E
/ineighbours V previous in V E
/ineighbours V previous out V E
/ineighbours V previous both V E
/ineighbours V previous both V E

# Try adding same vertex
/addvertex V
/catch "contains vertex"

# Removing vertex
/removevertex V

# Checking if vertex was removed
/containsvertex V NO
/containsedge V V NO
/catch "does not contain vertex"
/getedge V V E
/catch "does not contain vertex"

# Try removing it again
/removevertex V
/catch "does not contain vertex"

## Undirected

/create UNDIRECTED
/addvertex V

# Checking if vertex was added
/vertexcount 1
/containsvertex V YES
/ivertices next V
/ivertices previous V

# Checking vertex degrees
/degree V in 0
/degree V out 0
/degree V both 0

# Checking vertex neighbours
/ineighbours V next in N E
/catch "does not contain edge"
/ineighbours V next out N E
/catch "does not contain edge"
/ineighbours V next both N E
/catch "does not contain edge"
/ineighbours V previous in N E
/catch "does not contain edge"
/ineighbours V previous out N E
/catch "does not contain edge"
/ineighbours V previous both N E
/catch "does not contain edge"

# Try removing edge VV
/removeedge V V
/catch "does not contain edge"

# Try adding edge VX
/addedge V X E
/catch "does not contain vertex"
/addedge X V E
/catch "does not contain vertex"

# Try getting edge VV
/getedge V V E
/catch "does not contain edge"

# Checking for edge VV
/containsedge V V NO

# Adding edge VV
/addedge V V E

# Checking if edge was added
/containsedge V V YES
/getedge V V E

# Checking neighbourhood
/ineighbours V next in V E
/ineighbours V next out V E
/ineighbours V next both V E
/ineighbours V next both V E
/ineighbours V previous in V E
/ineighbours V previous out V E
/ineighbours V previous both V E
/ineighbours V previous both V E

# Try adding same vertex
/addvertex V
/catch "contains vertex"

# Removing vertex
/removevertex V

# Checking if vertex was removed
/containsvertex V NO
/containsedge V V NO
/catch "does not contain vertex"
/getedge V V E
/catch "does not contain vertex"

# Try removing it again
/removevertex V
/catch "does not contain vertex"

### Two vertices

## Directed

/create DIRECTED
/addvertex U
/addvertex V

# Checking for edges UV/VU
/containsedge U V NO
/containsedge V U NO
/getedge U V UV
/catch "does not contain edge"
/getedge V U UV
/catch "does not contain edge"
/removeedge U V
/catch "does not contain edge"
/removeedge V U
/catch "does not contain edge"

# Adding edge UV
/addedge U V UV

# Checking if UV was added
/containsedge U V YES
/getedge U V UV

# Directed graph -- VU doesn't exist
/containsedge V U NO
/getedge V U UV
/catch "does not contain edge"

## Undirected

/create UNDIRECTED
/addvertex U
/addvertex V

# Checking for edges UV/VU
/containsedge U V NO
/containsedge V U NO
/getedge U V UV
/catch "does not contain edge"
/getedge V U UV
/catch "does not contain edge"
/removeedge U V
/catch "does not contain edge"
/removeedge V U
/catch "does not contain edge"

# Adding edge UV
/addedge U V UV

# Checking if UV was added
/containsedge U V YES
/getedge U V UV

# Undirected graph -- VU === UV
/containsedge V U YES
/getedge V U UV

### Removing edges/vertices

## Directed

/create DIRECTED
/addvertex U
/addvertex V

# Add edge UV
/addedge U V E

# Remove vertex U
/removevertex U

# Check if edge UV was removed too
/containsedge U V NO
/catch "does not contain vertex"

# Add vertex U again
/addvertex U

# Check if edge UV is long gone
/containsedge U V NO

# Add edge VU
/addedge V U E

# Remove vertex U
/removevertex U

# Check if edge VU was removed too
/containsedge V U NO
/catch "does not contain vertex"

## Unirected

/create UNDIRECTED
/addvertex U
/addvertex V

# Add edge UV
/addedge U V E

# Remove vertex U
/removevertex U

# Check if edge UV was removed too
/containsedge U V NO
/catch "does not contain vertex"

# Add vertex U again
/addvertex U

# Check if edge UV is long gone
/containsedge U V NO

# Add edge VU
/addedge V U E

# Remove vertex U
/removevertex U

# Check if edge VU was removed too
/containsedge V U NO
/catch "does not contain vertex"

#### Flags

### Empty graph

## Directed

/create DIRECTED
/setvertexflag V 10
/catch "does not contain vertex"

## Undirected

/create UNDIRECTED
/setvertexflag V 10
/catch "does not contain vertex"

### One vertex

## Directed

/create DIRECTED
/addvertex V
/setvertexflag V 10
/getvertexflag V 10

## Undirected

/create UNDIRECTED
/addvertex V
/setvertexflag V 10
/getvertexflag V 10

### Many vertices

## Directed

/create DIRECTED
/addvertex U
/addvertex V
/setvertexflag V 10
/setvertexflag U 20
/getvertexflag V 10
/getvertexflag U 20
/setallflags 50
/getvertexflag U 50
/getvertexflag V 50
/setvertexflag V 100
/getvertexflag V 100
/getvertexflag U 50

## Undirected

/create UNDIRECTED
/addvertex U
/addvertex V
/setvertexflag V 10
/setvertexflag U 20
/getvertexflag V 10
/getvertexflag U 20
/setallflags 50
/getvertexflag U 50
/getvertexflag V 50
/setvertexflag V 100
/getvertexflag V 100
/getvertexflag U 50